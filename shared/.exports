# shellcheck shell=sh
HOME="${HOME:?}"
PATH="/usr/games/bin:/usr/games:${PATH}"

# linux
if [ "$(uname -s)" = 'Linux' ] ; then
  # brew
  if [ -d /home/linuxbrew ] ; then
    export HOMEBREW_PREFIX='/home/linuxbrew/.linuxbrew'
    export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar"
    export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
    export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}:"
    export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}"
  fi

  # editor
  # use vscode as the default editor in codespaces
  export VISUAL="code -w"
  export EDITOR="$VISUAL"
  export GIT_EDITOR="$EDITOR"
fi

# mac
if [ "$(uname -s)" = 'Darwin' ] ; then
  # https://support.apple.com/en-us/HT208050
  export BASH_SILENCE_DEPRECATION_WARNING=1

  # brew (intel)
  export HOMEBREW_PREFIX='/usr/local'

  # brew (apple)
  # https://docs.brew.sh/FAQ#why-is-the-default-installation-prefix-opthomebrew-on-apple-silicon
  case "$(uname -m)" in
    arm64|aarch64)
      export HOMEBREW_PREFIX='/opt/homebrew' ;;
  esac

  # brew (common)
  export HOMEBREW_BUNDLE_NO_LOCK=1
  export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar"
  export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
  export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}:"
  export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}"

  # bat can use sublime themes
  # mkdir -p ~/.config/bat && ln -sf ~/.dracula/themes/sublime ~/.config/bat/themes && bat cache --build
  export BAT_THEME='Dracula Pro (Van Helsing)'

  # editor
  export VISUAL='subl -w'
  export EDITOR='nano'
  export GIT_EDITOR="$EDITOR"
fi

# XDG Base Directory Specification
# https://wiki.archlinux.org/title/XDG_Base_Directory
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"

# brew
PATH="${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:${PATH}"
PATH="${HOMEBREW_PREFIX}/opt/libpq/bin:${PATH}"

# deno
# https://deno.land/manual/getting_started/setup_your_environment#environment-variables
# https://deno.land/manual/tools/script_installer
export DENO_DIR="${XDG_CACHE_HOME}/deno"
export DENO_INSTALL_ROOT="${HOME}/.deno"
PATH="${DENO_INSTALL_ROOT}/bin:${PATH}"

# python
export PIPX_BIN_DIR="${HOME}/.local/bin"
export PIPX_HOME="${HOME}/.local/pipx"
export PYENV_ROOT="${HOME}/.pyenv"
PATH="${PYENV_ROOT}/bin:${PATH}"

# rust
export RUSTUP_HOME="${HOME}/.rustup"
export CARGO_HOME="${HOME}/.cargo"
PATH="${CARGO_HOME}/bin:${PATH}"

# nvm
export NVM_SYMLINK_CURRENT=true

# fish prompt
export FISH_PROMPT_K8S=0
export FISH_PROMPT_GIT=1
export FISH_PROMPT_DOCKER=1

# misc
export PAGER='less -FRSX --tabs=2'
export MANPAGER="sh -c 'col -bx | bat --language=man --style=plain --paging=always'"
export BAT_PAGER="$PAGER"

# add local bin to path
if [ ! -d "${HOME}/.local/bin" ] ; then mkdir -p "${HOME}/.local/bin" ; fi
PATH="${HOME}/.local/bin:${PATH}"

# path
# https://blog.ronin.cloud/linux-directories-paths
export PATH="$PATH"
