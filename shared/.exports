# shellcheck shell=sh
# linux
if [ "$(uname -s)" = 'Linux' ] ; then
  # games
  if ! echo ":${PATH}:" | grep -q ':/usr/games:' ; then PATH="/usr/games:${PATH}" ; fi
  if ! echo ":${PATH}:" | grep -q ':/usr/games/bin:' ; then PATH="/usr/games/bin:${PATH}" ; fi

  # editor
  # use vscode as the default editor in codespaces
  export VISUAL="code -w"
  export EDITOR="$VISUAL"
  export GIT_EDITOR="$EDITOR"

  # cuda
  export CUDA_HOME='/usr/local/cuda'
  PATH="${CUDA_HOME}/bin:${PATH}"

  # add to LD_LIBRARY_PATH if not already there
  if [ -d '/usr/lib/wsl/lib' ] && ! echo ":${LD_LIBRARY_PATH}:" | grep -q ':/usr/lib/wsl/lib:' ; then
    LD_LIBRARY_PATH="/usr/lib/wsl/lib:${LD_LIBRARY_PATH}"
  fi
  if [ -d "${CUDA_HOME}/lib64" ] && ! echo ":${LD_LIBRARY_PATH}:" | grep -q ":${CUDA_HOME}/lib64:" ; then
    LD_LIBRARY_PATH="${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}"
  fi
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH%:}"  # strip trailing colon
fi

# mac
if [ "$(uname -s)" = 'Darwin' ] ; then
  # https://support.apple.com/en-us/HT208050
  export BASH_SILENCE_DEPRECATION_WARNING=1

  # icloud
  # ex: cp $ICLOUD/file.txt ~/Desktop
  # note: fish handles the space; bash requires double quotes
  export ICLOUD="${HOME}/Library/Mobile Documents/com~apple~CloudDocs"

  # brew (intel)
  export HOMEBREW_PREFIX='/usr/local'

  # brew (apple)
  # https://docs.brew.sh/FAQ#why-is-the-default-installation-prefix-opthomebrew-on-apple-silicon
  case "$(uname -m)" in
    arm64|aarch64)
      export HOMEBREW_PREFIX='/opt/homebrew' ;;
  esac

  # brew (common)
  export HOMEBREW_BUNDLE_NO_LOCK=1
  export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar"
  export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}/Homebrew"
  export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}:"
  export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}"

  # editor
  export VISUAL='subl -w'
  export EDITOR='nano'
  export GIT_EDITOR="$EDITOR"
fi

# XDG Base Directory Specification
# https://wiki.archlinux.org/title/XDG_Base_Directory
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"

# add local bin to path
if [ ! -d "${HOME}/.local/bin" ] ; then mkdir -p "${HOME}/.local/bin" ; fi
PATH="${HOME}/.local/bin:${PATH}"

# brew
PATH="${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:${PATH}"
PATH="${HOMEBREW_PREFIX}/opt/libpq/bin:${PATH}"

# rust
export RUSTUP_HOME="${HOME}/.rustup"
export CARGO_HOME="${HOME}/.cargo"
PATH="${CARGO_HOME}/bin:${PATH}"

# bun
export BUN_HOME="${HOME}/.bun"
PATH="${BUN_HOME}/bin:${PATH}"

# deno
export DENO_DIR="${XDG_CACHE_HOME}/deno"
export DENO_INSTALL_ROOT="${HOME}/.deno"
PATH="${DENO_INSTALL_ROOT}/bin:${PATH}"

# python
export VIRTUAL_ENV_DISABLE_PROMPT=1
export PYDEVD_DISABLE_FILE_VALIDATION=1

# sklearn
export SCIKIT_LEARN_DATA="${XDG_CACHE_HOME}/scikit_learn_data"

# statsmodels
export STATSMODELS_DATA="${XDG_CACHE_HOME}/statsmodels_data"

# tensorflow
# (1 ignores INFO, 2 ignores WARNING)
export TF_CPP_MIN_LOG_LEVEL=2
export TFDS_DATA_DIR="${XDG_CACHE_HOME}/tensorflow_datasets"

# ðŸ¤—
export HF_HOME="${XDG_CACHE_HOME}/huggingface"
export HF_DATASETS_CACHE="${XDG_CACHE_HOME}/huggingface/datasets"
export HF_HUB_CACHE="${XDG_CACHE_HOME}/huggingface/hub"
export HF_HUB_ENABLE_HF_TRANSFER=1

# npm
export NPM_CONFIG_AUDIT=false
export NPM_CONFIG_FUND=false

# fish prompt
export FISH_PROMPT_K8S=0
export FISH_PROMPT_GIT=1
export FISH_PROMPT_GIT_USER=0
export FISH_PROMPT_DOCKER=0

# telemetry
export ASTRO_TELEMETRY_DISABLED=1
export HF_HUB_DISABLE_TELEMETRY=1
export GRADIO_ANALYTICS_ENABLED=false
export HOMEBREW_NO_ANALYTICS=1
export NEXT_TELEMETRY_DISABLED=1
export PLOOMBER_STATS_ENABLED=false  # jupysql
export STORYBOOK_DISABLE_TELEMETRY=1

# misc
export PAGER='less -FRSX --tabs=2'
export MANPAGER="sh -c 'col -bx | bat --language=man --style=plain --paging=always'"
export BAT_PAGER="$PAGER"
export BAT_THEME='GitHub'

# path
# https://blog.ronin.cloud/linux-directories-paths
export PATH="$PATH"
