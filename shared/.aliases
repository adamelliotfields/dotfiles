# shellcheck shell=sh
# shellcheck disable=SC2016,SC2120,SC2142
# see mac/.config/fish/conf.d/abbreviations.fish for more
[ -n "$BASH_VERSION" ] && alias refresh="source ~/.bashrc"
[ -n "$ZSH_VERSION" ] && alias refresh="source ~/.zshrc"

# misc
alias c='clear'
alias t='type -a'
alias rmf='rm -rf'
alias rnm='find . -type d -name node_modules -maxdepth 3 | xargs -I{} rm -r {}'
alias ai='aichat --role=default'
alias emoji='aichat --role=emoji --model=gemini:gemini-pro'
alias pplx='aichat --role=pplx --model=pplx:sonar-medium-online'

# https://sgeb.io/posts/git-diff-anywhere
alias gdiff='git diff --no-ext-diff --no-index'

# python
alias venv='python -m venv'

# bat
alias b='bat -n' # line numbers
alias bp='bat -pp' # plain no paging
alias bman='bat -pl man' # e.g., gh --help | bman

# lsd
# prefer over exa
alias l='lsd -lA --date=relative --group-dirs=first --permission=octal --size=short'
alias lt='lsd -a --tree --depth=1 --group-dirs=first --icon=never'

# fd
# use globs all the time
# Examples:
#   f '*.sh'       # find all .sh files in pwd
#   f '*.bash' lib # find all .bash files in lib/
alias f='fd --glob' # pass --regex to go back to default RegEx mode
alias fr='fd --regex'
alias fH='fd --glob -H' # show hidden files
alias fI='fd --glob -I' # show ignored files
alias fu='fd --glob --unrestricted' # equivalent of `fd -H -I`
alias ff='fd --glob --type=file' # find files
alias fl='fd --glob --type=symlink' # find symlinks
alias fx='fd --glob --type=executable' # find executables
alias fdd='fd --glob --type=directory' # find directories
alias fddp='fd --glob --type=directory --prune' # don't traverse into matching directories
alias fddpI='fd --glob --type=directory --prune -I' # usage: fddpI $glob [$dir=pwd]

# fzf
alias fz='fzf --exact --reverse'
alias fzcd='cd (fd -td -calways | fzf --ansi --exact --reverse)'
alias fzopen='fd -tf -calways | fzf --ansi --exact --reverse | xargs -I{} open {}'
alias fzcode='fd -tf -calways | fzf --ansi --exact --reverse | xargs -I{} code {}'
alias fzbranch='git for-each-ref --format="%(refname:short)" refs/heads refs/remotes | sed "s/^origin\///" | fzf --exact --reverse | xargs git switch'
alias fzclone='gh repo list | awk "{print \$1}" | fzf --exact --reverse | xargs gh repo clone'
alias fzterm='ps -e | fzf --exact --reverse --header-lines=1 | awk "{print \$1}" | xargs kill -15'
alias fzkill='ps -e | fzf --exact --reverse --header-lines=1 | awk "{print \$1}" | xargs kill -9'
alias fzkilltcp='lsof -P -iTCP -sTCP:LISTEN | fzf --exact --reverse --header-lines=1 | awk "{print \$2}" | xargs kill -9'

# git
alias g='git'
alias ga='git add'
alias gaa='git add --update' # add ALL tracked files (ignores new files) (99% of the time you want this)
alias gb='git branch'
alias gba='git branch --all' # list ALL local and remote branches
alias gbd='git branch --delete' # delete a branch
alias gbD='git branch -D' # force delete a branch
alias gbr='git branch -r' # list remote branches
alias gbrd='git branch -rd' # delete a remote branch
alias gc='git commit' # opens your $GIT_EDITOR or $EDITOR
alias gcm='git commit --message' # enter message after command, e.g., gcm 'initial commit'
alias gca='git commit --all' # stage and commit all tracked files (ignores new files)
alias gcam='git commit --all --message'
alias gce='git commit --allow-empty' # for kicking off a new ci job
alias gcem='git commit --allow-empty --message'
alias gco='git checkout'
alias gd='git diff'
alias gdt='git difftool'
alias gf='git fetch'
alias gfo='git fetch origin'
alias gfp='git fetch --prune' # prunes deleted remote branches from local
alias gi='git init'
alias gl='git log'
alias glp='git log -p' # paginated log, shows diffs colored by git-delta (the program `delta`)
alias glg='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar)%Creset %an %C(bold blue)<%ae>%Creset"'
alias glo='git log --oneline'
alias gls='git log --show-signature'
alias gm='git merge'
alias gmt='git mergetool'
alias gp='git push'
alias gpo='git push -u origin'
alias gpl='git pull'
alias gplnff='git pull --no-ff' # use this one to force a merge commit
alias gplo='git pull origin'
alias gplnffo='git pull --no-ff origin'
alias gr='git reset --' # use this one to reset staged files
alias grs='git restore --' # use this one to restore a changed file
alias grao='git remote add origin'
alias gs='git stash'
alias gsd='git stash drop'
alias gsp='git stash pop'
alias gsl='git stash list'
alias gslp='git stash list -p'
alias gss='git stash show'
alias gssp='git stash show -p'
alias gst='git status'
alias gsw='git switch' # use this one to switch to a different branch
alias gswc='git switch -c' # use this one to create a new branch and switch to it

# git extras
alias gu='git reset --soft HEAD~1' # git-undo (undoes the last commit but leaves files staged)
alias gus='git reset --soft HEAD~1 ; git reset' # git-undo -s (undoes the last commit and unstages all files)

# github cli
alias ghr='gh repo'
alias ghrc='gh repo create' # interactive create, will prompt for inputs
alias ghrcl='gh repo clone' # can omit org if it's your own repo
alias ghrv='gh repo view --web' # same as git browse from git-extras

# npm
alias n='npm'
alias nC='npm -C'
alias ni='npm install --save-prod'
alias nie='npm install --save-prod --save-exact'
alias nid='npm install --save-dev'
alias nide='npm install --save-dev --save-exact'
alias nio='npm install --save-optional'
alias nioe='npm install --save-optional --save-exact'
alias nig='npm install --global'
alias nige='npm install --global --save-exact'
alias nr='npm run'
alias nrb='npm run build'
alias nrd='npm run dev'
alias nrl='npm run lint'
alias nrs='npm run start'
alias nrt='npm run test'
alias ndeps='cat package.json | jq .dependencies'
alias nddeps='cat package.json | jq .devDependencies'
alias nodeps='cat package.json | jq .optionalDependencies'
alias nscripts='cat package.json | jq .scripts'
alias nengines='cat package.json | jq .engines'

# docker
alias d='docker'
alias dr='docker run'
alias drd='docker run -d'
alias dri='docker run -it'
alias drr='docker run --rm'
alias drir='docker run -it --rm'
alias dc='docker container'
alias dcl='docker container logs -f'
alias dcls='docker container ls -a'
alias dclsq='docker container ls -aq'
alias dcs='docker container start'
alias dcst='docker container stop'
alias dcr='docker container rm -f'
alias dcrs='docker container restart'
alias dce='docker container exec'
alias dcei='docker container exec -it'
alias dcu='docker compose up'
alias dcud='docker compose up -d'
alias dcd='docker compose down'
alias dcdv='docker compose down -v'
alias di='docker image'
alias dil='docker image ls'
alias dilq='docker image ls -q'
alias dip='docker image pull'
alias dir='docker image rm -f'
alias dvl='docker volume ls'
alias dvlq='docker volume ls -q'
alias dv='docker volume'
alias dvc='docker volume create'
alias dvr='docker volume rm -f'
alias dn='docker network'
alias dnl='docker network ls'
alias dnlq='docker network ls -q'
alias dnr='docker network rm -f'

# kubectl
# see https://github.com/ahmetb/kubectl-aliases
alias k='kubectl'
alias ki='kubectl cluster-info'
alias kl='kubectl logs -f'
alias kc='kubectl config'
alias kcv='kubectl config view --minify'
alias kccc='kubectl config current-context'
alias kccns="kubectl config view --minify --output='jsonpath={..namespace}'"
alias kcgc='kubectl config get-contexts'
alias kcuc='kubectl config use-context'
alias kcuns='kubectl config set-context --current --namespace' # set the namespace for the current context (there is no `kubectl config use-namespace`)
alias kcusns='kubectl config unset contexts.$(kubectl config current-context).namespace' # unset namespace
alias kg='kubectl get'
alias kga='kubectl get --all-namespaces'
alias kgj='kubectl get --output=json'
alias kgns='kubectl get namespaces'
